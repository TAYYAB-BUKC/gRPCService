@page "/weather"
@using Grpc.Core
@using gRPCService.Basics
@inject FirstGRPCServiceDefinition.FirstGRPCServiceDefinitionClient grpcClient

<PageTitle>Server Streaming</PageTitle>

<h1>Server Streaming</h1>

@if (responses == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Response Message</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var response in responses)
            {
                <tr>
                    <td>@response.Message</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Response> responses = new List<Response>();

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate a loading indicator
        await Task.Delay(250);

        using var request = grpcClient.ServerStreaming(new Request(){
            Content = "Hello gRPC server from Blazor App"
        });

        while (await request.ResponseStream.MoveNext())
        {
            await Task.Delay(500);
            responses.Add(request.ResponseStream.Current);
            StateHasChanged();
        }
    }
}